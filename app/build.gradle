plugins {
  id 'com.android.application'
  id 'org.jetbrains.kotlin.android'
  id 'kotlin-kapt'
  id 'kotlin-android'
}
def androidID = rootProject.ext.androidId
def appID = rootProject.ext.appId
android {
  compileSdkVersion androidID.compileSdkVersion

  defaultConfig {
    applicationId appID.app
    minSdkVersion androidID.minSdkVersion
    targetSdkVersion androidID.targetSdkVersion
    versionCode androidID.versionCode
    versionName androidID.versionName

    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [moduleName: project.getName(), packageNameForAPT: packageNameForAPT]
      }
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  kotlinOptions {
    jvmTarget = '1.8'
  }

  packagingOptions {
    exclude 'META-INF/DEPENDENCIES.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/DEPENDENCIES'
    exclude 'META-INF/notice.txt'
    exclude 'META-INF/license.txt'
    exclude 'META-INF/dependencies.txt'
    exclude 'META-INF/LGPL2.1'
    exclude 'META-INF/scan-report'
  }
}

repositories {
  flatDir{
    dirs 'libs',project.getRootProject().project(":commom").projectDir.absolutePath + "/libs"
  }
}

/*kapt {
  arguments {
    arg("AROUTER_MODULE_NAME", project.getName())
  }
}*/

dependencies {
  implementation fileTree(dir: "libs", include: ["*.jar"])
  api rootProject.ext.supportLibs
  // ARouter
/*  implementation "com.alibaba:arouter-api:${rootProject.ext.dependVersion.arouter_api}"
  kapt "com.alibaba:arouter-compiler:${rootProject.ext.dependVersion.arouter_compiler}"*/
  implementation project(":commom")
  //  arouter 专用 注解模块
  implementation project(":arouter_annotation")

  // arouter 专用 注解处理器
  kapt project(':arouter_compiler')

}